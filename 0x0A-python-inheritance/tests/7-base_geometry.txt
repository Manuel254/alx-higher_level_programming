Tests for 7-base_geometry
========================

Import from ``7-base_geometry``
-------------------------------

Usage:

Import module:

::
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Instantiate:

::
	>>> bg = BaseGeometry()

Examples:

If value is an integer.

::
	>>> bg.integer_validator("my_int", 12)
	>>> bg.integer_validator("width", 89)

If value is a string.

::
	>>> bg.integer_validator("name", "John")
	Traceback (most recent call last):
	TypeError: name must be an integer

If value is 0.

::
	>>> bg.integer_validator("age", 0)
	Traceback (most recent call last):
	ValueError: age must be greater than 0

If value is less than 0.

::
	>>> bg.integer_validator("distance", -4)
	Traceback (most recent call last):
	ValueError: distance must be greater than 0

If ``integer_validator()`` has no arguments

::
	>>> bg.integer_validator()
	Traceback (most recent call last):
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

If ``integer_validator() has one argument

::
	>>> bg.integer_validator("name")
	Traceback (most recent call last):
	TypeError: integer_validator() missing 1 required positional argument: 'value'
